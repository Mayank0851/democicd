name: Pipeline Demo

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pip install -r requirements.txt
          pip install pytest 
          pip install httpx
          pytest .

  deploy-stage:
    needs: test  # Ensure tests pass before deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to VM
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@52.66.204.108 << 'EOF'
          set -e  # Exit on any command failure
      
          # Clone or update the repository
          if [ -d "/home/ubuntu/democicd" ]; then
            echo "Repository exists. Pulling latest changes..."
            cd /home/ubuntu/democicd
            git reset --hard  # Prevent merge conflicts
            git pull origin main
          else
            echo "Cloning repository..."
            cd /home/ubuntu
            git clone https://github.com/Mayank0851/democicd
            cd democicd
          fi
      
          # Install Python and dependencies
          echo "Installing Python and dependencies..."
          sudo apt update && sudo apt install -y python3 python3-venv python3-pip
          # Install Prometheus and Grafana
          echo "Installing Prometheus & Grafana..."
          sudo apt install -y prometheus

          # Add Grafana Repository & Install
          echo "Adding Grafana Repository..."
          sudo apt-get install -y software-properties-common
          sudo wget -q -O - https://packages.grafana.com/gpg.key | sudo tee /usr/share/keyrings/grafana.key
          echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://packages.grafana.com/oss/deb stable main" | sudo tee /etc/apt/sources.list.d/grafana.list

          sudo apt update
          sudo apt install -y grafana
          
      
          # Set up virtual environment
          if [ ! -d "env" ]; then
            python3 -m venv env
          fi
          source env/bin/activate
      
          # Install dependencies
          pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            echo "Error: requirements.txt not found!" >&2
            exit 1
          fi
      
          # Kill any existing Uvicorn process
          pkill uvicorn || true
      
          # Start Uvicorn in the background
          nohup env/bin/uvicorn main:app --host 0.0.0.0 --port 8080 > uvicorn.log 2>&1 & disown
          EOF
